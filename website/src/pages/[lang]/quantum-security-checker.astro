---
import Layout from "@/components/layout/Layout.astro";
import Button from "@/components/ui/Button.astro";
import Input from "@/components/ui/Input.astro";
import Loader from "@/components/ui/Loader.astro";

import env from "@/config";
import {
  getLocaleFromUrl,
  createTranslator,
  SUPPORTED_LOCALES,
  getLocalizedMetadata,
} from "@/utils/i18n";
import type { SEOProps } from "astro-seo";

export async function getStaticPaths() {
  return SUPPORTED_LOCALES.map((lang) => ({ params: { lang } }));
}

const locale = getLocaleFromUrl(Astro.url.pathname);
const localizedMetadata = await getLocalizedMetadata(locale);
const t = await createTranslator(locale);

const metadata: SEOProps = {
  ...localizedMetadata,
  canonical: `${env.SITE_BASE_URL}/${locale}/quantum-security-checker`,
};
---

<Layout {...metadata}>
  <section
    class="max-w-content mx-auto px-[30px] py-10 lg:gap-20 lg:pt-20 lg:pb-20 2xl:px-0"
  >
    <h1
      class="font-large-title-mobile lg:font-large-title min-large-mobile:text-[50px] mb-[18px] text-center text-[38px]"
    >
      {t("checker.title")}
    </h1>

    <p class="font-body-mobile lg:font-body mx-auto max-w-[790px] text-center">
      {t("checker.description")}
    </p>

    <form
      id="security-checker-form"
      method="post"
      class="mt-10 flex items-end justify-center gap-5"
    >
      <Input
        label={t("checker.form.label")}
        aria-label={t("checker.form.label")}
        class="md:!w-[420px]"
        id="security-checker-input"
        type="text"
        name="address"
        placeholder={t("checker.form.placeholder")}
        required
      />

      <Button id="security-checker-button" type="submit" class="w-[150px]"
        >{t("checker.form.btn")}</Button
      >
    </form>

    <div id="report-card-loader" class="mt-10 hidden">
      <Loader size="xl" />
    </div>
  </section>

  <div id="report-card-container" class="flex flex-col"></div>
</Layout>

<script>
  const whitelistedOrigin = ["https://q.day"];
  const iFrameId = "report-card";
  const baseCheckerUrl = "https://q.day/security-report";

  const form = document.getElementById(
    "security-checker-form",
  ) as HTMLFormElement;
  const address = document.getElementById(
    "security-checker-input",
  ) as HTMLInputElement;
  const btn = document.getElementById("security-checker-button");
  const reportCardLoader = document.getElementById("report-card-loader");

  if (!form || !address || !btn || !reportCardLoader)
    throw new Error("Form not detected, can't analyze!");

  const loadReportCardIframe = (address: string) => {
    const reportCardUrl = `${baseCheckerUrl}/${address}`;
    const reportCardContainerEl = document.getElementById(
      "report-card-container",
    );

    reportCardContainerEl!.innerHTML = "";

    const iFrameEl = document.createElement("iframe");
    iFrameEl.id = iFrameId;
    iFrameEl.scrolling = "no";
    iFrameEl.style.overflow = "hidden";
    iFrameEl.setAttribute("width", "100%");
    iFrameEl.setAttribute("height", "100%");
    iFrameEl.src = reportCardUrl;

    reportCardContainerEl!.appendChild(iFrameEl);

    window.addEventListener("message", (event) => {
      if (!whitelistedOrigin.includes(event.origin)) return; // security check
      if (event.data.type === "iframe-height") {
        iFrameEl.style.height = event.data.height + "px";
        reportCardLoader.classList.add("hidden");
      }
    });
  };

  // Events
  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    // Make button disabled
    btn.setAttribute("disabled", "true");
    reportCardLoader.classList.remove("hidden");

    try {
      // Make sure the input is not empty
      const addressValue = address?.value?.trim();
      if (!addressValue) throw new Error("Missing wallet address.");

      loadReportCardIframe(addressValue);

      // Make button active after done processing submit
      btn.removeAttribute("disabled");
      // Reset form
      form.reset();
    } catch (error: any) {
      // Make button active after done processing submit
      btn.removeAttribute("disabled");
    }
  });
</script>
