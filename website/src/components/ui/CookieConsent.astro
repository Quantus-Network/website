---
import { createTranslator, getLocaleFromUrl } from "@/utils/i18n";
import Button from "./Button.astro";

const privacyPolicyUrl = "/terms-and-privacy";

const locale = getLocaleFromUrl(Astro.url.pathname);
const t = await createTranslator(locale);
---

<!-- Cookie Consent Banner -->
<div
  id="cookie-consent-banner"
  class="border-footer-separator bg-bg-primary fixed inset-x-4 bottom-4 z-50 hidden rounded-lg border p-6 shadow-lg md:right-4 md:left-auto md:max-w-[450px]"
>
  <div class="flex flex-col gap-4">
    <div class="space-y-2">
      <h3 class="font-small-title">{t("cookie.title")}</h3>
      <p class="font-body-mobile">
        {t("cookie.notice")}
        <a href={privacyPolicyUrl} class="underline">{t("cookie.link")}</a>.
      </p>
    </div>
    <div class="flex gap-2">
      <Button id="accept-cookies" class="w-full">{t("cookie.accept")}</Button>
      <Button id="decline-cookies" class="w-full" variant="outline"
        >{t("cookie.decline")}</Button
      >
    </div>
  </div>
</div>

<!-- Analytics Scripts Container -->
<div id="analytics-container"></div>

<style>
  #cookie-consent-banner.show {
    display: block;
  }
</style>

<script>
  import env from "@/config";

  class CookieConsentManager {
    private gaId: string;
    private consentKey: string;
    private banner: HTMLElement | null;
    private analyticsContainer: HTMLElement | null;

    constructor(gaId: string) {
      this.gaId = gaId;
      this.consentKey = "cookie-consent";
      this.banner = null;
      this.analyticsContainer = null;

      this.init();
    }

    init() {
      // Wait for DOM to be ready
      if (document.readyState === "loading") {
        document.addEventListener("DOMContentLoaded", () => this.setup());
      } else {
        this.setup();
      }
    }

    setup() {
      this.banner = document.getElementById("cookie-consent-banner");
      this.analyticsContainer = document.getElementById("analytics-container");

      if (!this.banner || !this.analyticsContainer) {
        console.error("Cookie consent elements not found");
        return;
      }

      this.setupEventListeners();
      this.checkExistingConsent();
    }

    setupEventListeners() {
      const acceptBtn = document.getElementById("accept-cookies");
      const declineBtn = document.getElementById("decline-cookies");

      if (acceptBtn) {
        acceptBtn.addEventListener("click", () => this.handleAccept());
      }

      if (declineBtn) {
        declineBtn.addEventListener("click", () => this.handleDecline());
      }
    }

    checkExistingConsent() {
      const consent = this.getConsent();

      if (consent === null) {
        this.showBanner();
      } else if (consent === true) {
        this.loadAnalytics();
      }
    }

    showBanner() {
      if (this.banner) {
        this.banner.classList.add("show");
      }
    }

    hideBanner() {
      if (this.banner) {
        this.banner.classList.remove("show");
      }
    }

    handleAccept() {
      this.setConsent(true);
      this.hideBanner();
      this.loadAnalytics();
    }

    handleDecline() {
      this.setConsent(false);
      this.hideBanner();
    }

    getConsent() {
      try {
        const stored = localStorage.getItem(this.consentKey);
        return stored ? JSON.parse(stored) : null;
      } catch {
        return null;
      }
    }

    setConsent(value: boolean) {
      try {
        localStorage.setItem(this.consentKey, JSON.stringify(value));
      } catch (error) {
        console.error("Failed to save consent preference:", error);
      }
    }

    loadAnalytics() {
      if (!this.analyticsContainer) return;

      // Load Google Analytics
      if (this.gaId && this.gaId !== "GA-XXXXXXX") {
        this.loadGA();
      }
    }

    loadGA() {
      // Google Analytics
      const gaScript = document.createElement("script");
      gaScript.async = true;
      gaScript.src = `https://www.googletagmanager.com/gtag/js?id=${this.gaId}`;

      const gaConfigScript = document.createElement("script");
      gaConfigScript.innerHTML = `
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', '${this.gaId}');
      `;

      this.analyticsContainer?.appendChild(gaScript);
      this.analyticsContainer?.appendChild(gaConfigScript);
    }
  }

  // Initialize the cookie consent manager
  new CookieConsentManager(env.GA_ID);
</script>
