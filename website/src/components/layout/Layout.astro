---
import "../../styles/global.css";
import "@fontsource/prompt/200.css";
import "@fontsource/prompt/300.css";
import "@fontsource/prompt/400.css";
import "@fontsource/prompt/600.css";
import "@fontsource/prompt/700.css";
import "@fontsource/prompt/900.css";
import "@fontsource/inter/900.css";

import Navbar from "./navbar/Navbar.astro";
import Footer from "./footer/Footer.astro";

import { SEO, type SEOProps } from "astro-seo";
import defaultMetadata from "@/constants/default-metadata";
import { getLocaleFromUrl, getTextDirection } from "@/utils/i18n";
import CookieConsent from "@/components/ui/CookieConsent.astro";

interface Props extends SEOProps {}

const { ...seoProps } = Astro.props;

// Get current locale from URL or props
const currentLocale = getLocaleFromUrl(Astro.url.pathname);

// Merge with default metadata and props
const metadata = {
  ...defaultMetadata,
  ...seoProps,
};

// Get text direction for locale
const textDirection = getTextDirection(currentLocale);
---

<!doctype html>
<html lang={currentLocale} dir={textDirection} class="flex min-h-full flex-col">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" href="/favicon.ico" />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <meta name="generator" content={Astro.generator} />
    <SEO {...metadata} titleTemplate={undefined} />
  </head>
  <body class="flex grow flex-col pt-[139px]" data-locale={currentLocale}>
    <Navbar locale={currentLocale} />
    <main class="grow">
      <slot />
    </main>
    <Footer />

    <CookieConsent />
  </body>
</html>

<script>
  import {
    DEFAULT_LOCALE,
    getLocaleFromUrl,
    SUPPORTED_LOCALES,
  } from "@/utils/i18n";

  const localeStorageKey = "astro-i18n-redirect";
  const hasRedirected = localStorage.getItem(localeStorageKey);

  if (hasRedirected) throw new Error("Already redirected");

  const currentLocale = getLocaleFromUrl(window.location.pathname);
  const userLang = navigator.language as any;

  if (currentLocale === userLang || userLang.includes("en-")) {
    localStorage.setItem(localeStorageKey, "true");
    throw new Error("Already on the correct locale");
  }

  const cleanPathname = window.location.pathname
    .split("/")
    .filter((path: any) => !SUPPORTED_LOCALES.includes(path) && path !== "")
    .join("/");

  let newPath = `/${cleanPathname}`;

  if (SUPPORTED_LOCALES.includes(userLang) && userLang !== DEFAULT_LOCALE) {
    newPath = `/${userLang}${cleanPathname}`;
  }

  localStorage.setItem(localeStorageKey, "true");
  window.location.replace(newPath);
</script>
