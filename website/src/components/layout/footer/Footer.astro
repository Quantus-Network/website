---
import BrandLogo from "@/assets/brand/brand-logo.svg";
import BrandName from "@/assets/brand/brand-name.svg";

import Button from "@/components/ui/Button.astro";
import Input from "@/components/ui/Input.astro";
import MessageAlert from "@/components/ui/MessageAlert.astro";
import Separator from "@/components/ui/Separator.astro";
import SphereDecoration from "@/components/ui/SphereDecoration.astro";

import { FOOTER_NAVIGATIONS } from "@/constants/footer-navigations";
import { applyStyles } from "@/utils/apply-styles";

const year = new Date().getFullYear();

const currentPath = Astro.url.pathname;
const isCurrentPage = (href: string) => currentPath === href;
---

<footer
  class="border-footer-separator relative flex flex-col overflow-hidden border-t px-4 pb-[56px] backdrop-blur-lg md:pb-[30px]"
>
  <SphereDecoration
    variant="4"
    size={124}
    class="absolute top-[12rem] right-[3rem] -z-10 min-[453px]:top-[11rem] min-[482px]:top-[9rem] md:top-[15rem] md:left-[40%]"
  />
  <SphereDecoration
    variant="5"
    size={318}
    class="absolute -right-[6.3rem] -bottom-[9.3rem] -z-10"
  />
  <SphereDecoration
    variant="6"
    size={240}
    class="absolute -bottom-[8rem] left-[6rem] -z-10 hidden md:block"
  />

  <div
    class="max-w-content flex w-full flex-col items-center gap-9 pt-[76px] pb-9 md:mx-auto md:flex-row md:justify-between md:pt-[57px] md:pb-[67px]"
  >
    <div>
      <h3 class="font-small-title">Subscribe to our Newsletter</h3>
      <p class="font-body-mobile text-text-content-secondary md:font-body">
        Alpha Alert! Get your weekly news-blast with sneak previews, updates,
        news roundup, educational content and more
      </p>
    </div>

    <form
      id="footer-subscribe-form"
      method="post"
      class="flex w-full max-w-[calc(377px+150px)] flex-col items-end gap-5 md:flex-row md:items-center md:gap-3"
    >
      <Input
        class="md:max-w-[377px]"
        id="footer-subscribe-input"
        type="email"
        name="email"
        placeholder="Enter your email"
        required
      />
      <Button id="footer-subscribe-button" type="submit" class="w-[150px]"
        >Subscribe</Button
      >
    </form>

    <MessageAlert
      id="error"
      type="error"
      message="Error: something is going wrong."
    />
    <MessageAlert
      id="success"
      type="success"
      message="Welcome to quantum security ðŸŽ‰"
    />
  </div>

  <div class="max-w-content mx-auto w-full">
    <Separator />
  </div>

  <div
    class="max-w-content flex w-full flex-col md:mx-auto md:flex-row md:justify-between md:gap-x-6 md:pt-[56px]"
  >
    <div
      class="flex flex-col items-center gap-4 pt-[116px] md:items-end md:pt-0"
    >
      <div class="flex-shrink-0">
        <a href="/" class="flex items-center gap-3 hover:brightness-125">
          <BrandLogo
            class="min-[360px]:h-[61px] min-[360px]:w-[65px] md:h-[75px] md:w-[80px]"
          />
          <BrandName
            class="min-[360px]:h-[35px] min-[360px]:w-[256px] md:h-[43px] md:w-[316px]"
          />
        </a>
      </div>

      <p
        class="font-body-mobile text-text-content-secondary md:font-body text-center md:max-w-[316px] md:text-left"
      >
        A quantum-secure, Layer 1 blockchain for people who want to protect what
        matters; their assets, their future, and their freedom.
      </p>
    </div>

    <div
      class="flex justify-center gap-x-[68px] pt-[48px] md:pt-0 lg:gap-x-[104px]"
    >
      {
        FOOTER_NAVIGATIONS.map((navigation) => (
          <div class="flex flex-col gap-y-5">
            <h4 class="font-tag">{navigation.label}</h4>

            <ul class="flex flex-col gap-y-4">
              {navigation.children.map((navItem) => (
                <li>
                  <a
                    href={navItem.href}
                    target={navItem?.target}
                    rel={navItem?.rel}
                    class={applyStyles(
                      "font-small text-text-content-secondary transition-colors duration-200 hover:text-white",
                      isCurrentPage(navItem.href) && "text-white",
                    )}
                  >
                    {navItem.label}
                  </a>
                </li>
              ))}
            </ul>
          </div>
        ))
      }
    </div>
  </div>

  <p
    id="footer-copyright"
    class="font-small text-text-content-secondary pt-[98px] text-center md:pt-[83px]"
  >
    Copyright &copy; <span id="copy-year">{year}</span> Quantus Network
  </p>
</footer>

<script>
  import apiClient from "@/api/client";
  import { ALERT_TIMEOUT } from "@/constants/alert-timeout";

  const form = document.getElementById(
    "footer-subscribe-form",
  ) as HTMLFormElement;
  const email = document.getElementById(
    "footer-subscribe-input",
  ) as HTMLInputElement;
  const btn = document.getElementById("footer-subscribe-button");

  const successAlert = document.getElementById("alert-success");
  const errorAlert = document.getElementById("alert-error");
  const errorMessage = document.getElementById("alert-message-error");

  if (!form || !email || !btn)
    throw new Error("Form not detected, can't do submission!");

  // Events
  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    // Make button disabled
    btn.setAttribute("disabled", "true");

    // Hide messages if currently displayed
    successAlert?.classList.add("hidden");
    errorAlert?.classList.add("hidden");

    // Make sure the input is not empty
    const emailValue = email?.value?.trim();
    if (!emailValue) throw new Error("Email is required.");

    try {
      const resp = await apiClient.subscribe(emailValue);

      if (resp.status !== 201) throw new Error("Failed adding to waitlist.");

      // Make button active after done processing submit
      btn.removeAttribute("disabled");

      // Show success message
      successAlert?.classList.remove("hidden");
      setTimeout(() => {
        successAlert?.classList.add("hidden");
      }, ALERT_TIMEOUT);

      // Reset form
      form.reset();
    } catch (error: any) {
      // Make button active after done processing submit
      btn.removeAttribute("disabled");

      const errMsg = error.message;
      if (errMsg && errorMessage) errorMessage.textContent = errMsg;

      // Show error message
      errorAlert?.classList.remove("hidden");
      setTimeout(() => {
        errorAlert?.classList.add("hidden");
      }, ALERT_TIMEOUT);
    }
  });
</script>

<script>
  const copyYear = document.getElementById("copy-year");
  if (!copyYear) throw new Error("Failed updating copy year");

  copyYear.innerText = new Date().getFullYear().toString();
</script>
